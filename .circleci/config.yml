version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Financial-Times/generic-rw-aurora
    docker:
      - image: golang:1.10
        environment:
          GOPATH: /go
          CIRCLE_TEST_REPORTS: /tmp/test-results
          CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
          DB_TEST_URL: root:password@/pac
      - image: mysql:5.6
        # db.t2.small allows 45 connections
        command: [mysqld, --max-connections=45]
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: pac
    steps:
      - checkout
      - run:
          name: External Dependencies
          command: |
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            go get -u github.com/mattn/goveralls
            go get -u github.com/jstemmer/go-junit-report
      - run:
          name: Test Results
          command: |
            mkdir -p ${CIRCLE_TEST_REPORTS}
            mkdir -p ${CIRCLE_COVERAGE_REPORT}
      - run:
          name: Importing libraries
          command: dep ensure -v -vendor-only
      - run:
          name: Go Build
          command: go build -v
      - run:
          name: Run tests
          command: go test -race -cover -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out ./... | go-junit-report > ${CIRCLE_TEST_REPORTS}/junit.xml
      - run:
          name: Upload coverage
          command: goveralls -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out -service=circle-ci -repotoken=${COVERALLS_TOKEN}
      - store_test_results:
          path: /tmp/test-results
  dockerfile:
    working_directory: /generic-rw-aurora
    docker:
      - image: docker:1.12.6-git
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .
workflows:
  version: 2
  test-and-build-docker:
    jobs:
      - build
      - dockerfile:
          requires:
            - build
